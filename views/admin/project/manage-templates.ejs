<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <title>管理项目模板</title>
</head>
<body>
    <aside>
        <h1>智能管理平台Beta</h1>
        <ul>
            <li><a href="/admindashboard">首页</a></li>
            <li><a class="onclick" href="/admin/manage-templates">管理项目填报模板</a></li>
            <li><a href="#">用户管理</a></li>
            <li><a href="#">报告生成</a></li>
            <li><a href="#">设置</a></li>
        </ul>
    </aside>
    <!-- 主容器 -->
    <div class="container">
        <!-- 主内容区域 -->
        <div class="manage-templates">
            <h1>项目模板管理</h1>

            <!-- 按钮区域 -->
            <div class="button-container">
                <a href="/admin/create-template" class="btn create">创建模板</a>
            </div>
            <!-- 模板列表 -->
            <table>
                <thead>
                    <tr>
                        <th>模板ID</th>
                        <th>模板名称</th>
                        <th>模板描述</th>
                        <th>启用状态</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody id="templateTableBody">
                    <% templates.sort((a, b) => b.template_enable - a.template_enable).forEach(template => { %>
                        <tr id="template-<%= template.template_id %>" class="<%= template.template_enable === 1 ? 'enabled' : '' %>">
                            <td onclick="viewTemplate(<%= template.template_id %>)"><%= template.template_id %></td>
                            <td onclick="viewTemplate(<%= template.template_id %>)"><%= template.template_name %></td>
                            <td onclick="viewTemplate(<%= template.template_id %>)"><%= template.template_description || '无描述' %></td>
                            <td onclick="viewTemplate(<%= template.template_id %>)"><%= template.template_enable === 1 ? '启用' : '禁用' %></td>
                            <td>
                                <button class="btn enable" onclick="enableTemplate(<%= template.template_id %>, '<%= template.template_name %>')">启用模板</button>
                                <button class="btn edit" onclick="editTemplate(<%= template.template_id %>)">编辑模板</button>
                                <button class="btn delete" onclick="deleteTemplate(<%= template.template_id %>, '<%= template.template_name %>')">删除模板</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- 模态弹窗HTML结构 -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2>提示</h2>
            </div>
            <div class="modal-body">
                <p id="modal-message">你确定要进行此操作吗？</p>
            </div>
            <div class="modal-footer">
                <button id="modal-confirm" class="btn">确认</button>
                <button id="modal-cancel" class="btn">取消</button>
            </div>
        </div>
    </div>

    <script>
        // 获取模态弹窗元素
        const modal = document.getElementById("modal");
        const modalMessage = document.getElementById("modal-message");
        const confirmBtn = document.getElementById("modal-confirm");
        const cancelBtn = document.getElementById("modal-cancel");
        const closeBtn = document.getElementsByClassName("close")[0];

        // 显示模态弹窗
        function showModal(message, onConfirm) {
            modalMessage.innerText = message;
            modal.style.display = "block";

            // 当点击确认按钮时，调用传入的回调函数
            confirmBtn.onclick = function() {
                onConfirm();
                modal.style.display = "none";
            };

            // 当点击取消按钮或关闭按钮时，关闭模态弹窗
            cancelBtn.onclick = closeBtn.onclick = function() {
                modal.style.display = "none";
            };
        }

        // 功能按钮逻辑
        function viewTemplate(templateId) {
            console.log("查看模板: " + templateId);
            window.location.href = '/admin/view-template/' + templateId;
        }

        // 修改enableTemplate函数，使用模态弹窗代替alert
        function enableTemplate(templateId, templateName) {
            showModal(`确认将项目填报模板从“当前启用模板”更换到“${templateName}”?`, function() {
                // 如果确认，发送请求到后端更换模板
                fetch('/admin/replace-templates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ newTemplateId: templateId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === '模板已成功更换') {
                        // 更新模板启用状态
                        updateTemplateStatus(templateId);
                        showModal('模板已成功更换', function() {});
                    } else {
                        showModal('更换模板失败: ' + data.error, function() {});
                    }
                })
                .catch(error => {
                    console.error(error);
                    showModal('更换模板请求失败', function() {});
                });
            });
        }

        // 修改deleteTemplate函数，使用模态弹窗代替alert
        function deleteTemplate(templateId, templateName) {
            showModal(`你确定要删除模板 "${templateName}" 吗？删除后无法恢复。`, function() {
                // 发送删除请求到服务器
                fetch('/admin/delete-templates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ deleteTemplateId: templateId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === '模板已成功删除') {
                        // 删除成功后从页面中移除该行
                        const row = document.getElementById('template-' + templateId);
                        row.remove();
                        showModal('模板已成功删除', function() {});
                    } else {
                        showModal('删除模板失败: ' + data.message, function() {});
                    }
                })
                .catch(error => {
                    console.error(error);
                    showModal('删除模板请求失败', function() {});
                });
            });
        }

        function updateTemplateStatus(newTemplateId) {
            // 获取模板列表中的所有行
            const rows = Array.from(document.querySelectorAll('#templateTableBody tr'));
            
            // 按启用状态进行排序，使启用模板排在最前面
            rows.sort((a, b) => {
                const aEnabled = a.querySelector('td:nth-child(4)').innerText === '启用' ? 1 : 0;
                const bEnabled = b.querySelector('td:nth-child(4)').innerText === '启用' ? 1 : 0;
                return bEnabled - aEnabled; // 启用的模板排前面
            });

            // 清空当前表格内容并重新插入排序后的行
            const tableBody = document.getElementById('templateTableBody');
            tableBody.innerHTML = '';
            rows.forEach(row => tableBody.appendChild(row));

            // 更新模板启用状态
            rows.forEach(row => {
                const templateId = parseInt(row.id.replace('template-', ''));
                const enableCell = row.cells[3];
                if (templateId === newTemplateId) {
                    enableCell.innerText = '启用';
                    row.classList.add('enabled'); // 启用模板的样式
                } else {
                    enableCell.innerText = '禁用';
                    row.classList.remove('enabled');
                }
            });
        }

        function editTemplate(templateId) {
            console.log("编辑模板: " + templateId);
            window.location.href = '/admin/edit-template/' + templateId;
        }

        // 关闭模态弹窗
        window.onclick = function(event) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        };
    </script>

</body>
</html>
