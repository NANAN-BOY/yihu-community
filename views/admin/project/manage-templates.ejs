<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>管理项目模板</title>
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f7f7f7;
        }

        /* 导航栏样式 */
        nav {
            background-color: #34495e; /* 深灰色 */
            height: 50px;
            color: white;
            width: 100%;
            box-sizing: border-box;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
            display: flex;
            justify-content: space-between; /* 左右两侧对齐 */
            align-items: center;
        }

        /* 导航链接样式 */
        nav a {
            color: white;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
            font-size: 1rem;
            margin-right: 20px;
            transition: background-color 0.3s;
        }

        /* 首页链接样式 */
        nav a.home {
            background-color: #16a085; /* 绿松石色背景 */
            margin-right: 0;
            margin-left: -4px;
        }

        /* 当鼠标悬停在导航链接上时改变颜色 */
        nav a:hover {
            background-color: #1abc9c;
        }

        nav a:first-child {
            background-color: #16a085; /* 首页链接 */
        }

        /* 主内容区域样式 */
        .container {
            display: flex;
            min-height: 100vh;
            margin-top: 80px; /* 为导航栏腾出空间 */
        }

        .content-wrapper {
            padding: 20px;
            flex-grow: 1;
            background-color: #ecf0f1;
            box-sizing: border-box;
        }

        h1 {
            color: #2c3e50;
            margin-bottom: 20px;
        }

        /* 表格样式 */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table th, table td {
            padding: 12px;
            border: 1px solid #ddd;
            text-align: left;
        }

        table th {
            background-color: #2c3e50;
            color: white;
        }

        /* 按钮容器样式 */
        .button-container {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            color: white;
            background-color: #4CAF50;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #45a049;
        }

        .btn.delete {
            background-color: #f44336;
        }

        .btn.delete:hover {
            background-color: #e53935;
        }

        .btn.select {
            background-color: #2196F3;
        }

        .btn.select:hover {
            background-color: #1e88e5;
        }

        .btn.view {
            background-color: #9b59b6;
        }

        .btn.view:hover {
            background-color: #8e44ad;
        }

        .btn.enable {
            background-color: #f39c12;
        }

        .btn.enable:hover {
            background-color: #e67e22;
        }

        .btn.edit {
            background-color: #3498db;
        }

        .btn.edit:hover {
            background-color: #2980b9;
        }

        /* 启用模板的绿色样式 */
        .enabled {
            background-color: #2ecc71;
        }

    </style>
</head>
<body>

    <nav>
        <div>
            <!-- 左侧导航链接 -->
            <a href="/admindashboard" class="home">← 返回首页</a>
            <a href="#news">新闻</a>
            <a href="#contact">联系我们</a>
            <a href="#about">关于我们</a>
        </div>
    </nav>

    <!-- 主容器 -->
    <div class="container">
        <!-- 主内容区域 -->
        <div class="content-wrapper">
            <h1>项目模板管理</h1>

            <!-- 按钮区域 -->
            <div class="button-container">
                <a href="/admin/create-template" class="btn create">创建模板</a>
            </div>

            <!-- 模板列表 -->
            <table>
                <thead>
                    <tr>
                        <th>模板ID</th>
                        <th>模板名称</th>
                        <th>模板描述</th>
                        <th>启用状态</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody id="templateTableBody">
                    <% templates.sort((a, b) => b.template_enable - a.template_enable).forEach(template => { %>
                        <tr id="template-<%= template.template_id %>" class="<%= template.template_enable === 1 ? 'enabled' : '' %>">
                            <td><%= template.template_id %></td>
                            <td><%= template.template_name %></td>
                            <td><%= template.template_description || '无描述' %></td>
                            <td><%= template.template_enable === 1 ? '启用' : '禁用' %></td>
                            <td>
                                <button class="btn view" onclick="viewTemplate(<%= template.template_id %>)">查看模板</button>
                                <button class="btn enable" onclick="enableTemplate(<%= template.template_id %>, '<%= template.template_name %>')">启用模板</button>
                                <button class="btn edit" onclick="editTemplate(<%= template.template_id %>)">编辑模板</button>
                                <button class="btn delete" onclick="deleteTemplate(<%= template.template_id %>, '<%= template.template_name %>')">删除模板</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // 功能按钮逻辑
        function viewTemplate(templateId) {
            console.log("查看模板: " + templateId);
            window.location.href = '/admin/view-template/' + templateId;
        }

        function enableTemplate(templateId, templateName) {
            if (confirm(`确认将项目填报模板从“当前启用模板”更换到“${templateName}”?`)) {
                // 如果确认，发送请求到后端更换模板
                fetch('/admin/replace-templates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ newTemplateId: templateId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === '模板已成功更换') {
                        // 更新模板启用状态
                        updateTemplateStatus(templateId);
                        alert('模板已成功更换');
                    } else {
                        alert('更换模板失败: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error(error);
                    alert('更换模板请求失败');
                });
            }
        }

        function updateTemplateStatus(newTemplateId) {
            // 获取模板列表中的所有行
            const rows = Array.from(document.querySelectorAll('#templateTableBody tr'));
            
            // 按启用状态进行排序，使启用模板排在最前面
            rows.sort((a, b) => {
                const aEnabled = a.querySelector('td:nth-child(4)').innerText === '启用' ? 1 : 0;
                const bEnabled = b.querySelector('td:nth-child(4)').innerText === '启用' ? 1 : 0;
                return bEnabled - aEnabled; // 启用的模板排前面
            });

            // 清空当前表格内容并重新插入排序后的行
            const tableBody = document.getElementById('templateTableBody');
            tableBody.innerHTML = '';
            rows.forEach(row => tableBody.appendChild(row));

            // 更新模板启用状态
            rows.forEach(row => {
                const templateId = parseInt(row.id.replace('template-', ''));
                const enableCell = row.cells[3];
                if (templateId === newTemplateId) {
                    enableCell.innerText = '启用';
                    row.classList.add('enabled'); // 启用模板的样式
                } else {
                    enableCell.innerText = '禁用';
                    row.classList.remove('enabled');
                }
            });
        }

        function editTemplate(templateId) {
            console.log("编辑模板: " + templateId);
            window.location.href = '/admin/edit-template/' + templateId;
        }

        function deleteTemplate(templateId, templateName) {
            // 在删除之前弹出确认框
            if (confirm(`你确定要删除模板 "${templateName}" 吗？删除后无法恢复。`)) {
                // 发送删除请求到服务器
                fetch('/admin/delete-templates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ deleteTemplateId: templateId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message === '模板已成功删除') {
                        // 删除成功后从页面中移除该行
                        const row = document.getElementById('template-' + templateId);
                        row.remove();
                        alert('模板已成功删除');
                    } else {
                        alert('删除模板失败: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error(error);
                    alert('删除模板请求失败');
                });
            }
        }
    </script>

</body>
</html>
